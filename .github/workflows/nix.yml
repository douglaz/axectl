name: Nix

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  nix-build:
    name: Nix Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v23
      with:
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

    - name: Setup Cachix
      uses: cachix/cachix-action@v12
      with:
        name: axectl
        # If you have a signing key, add it as CACHIX_SIGNING_KEY secret
        # signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'

    - name: Check flake
      run: nix flake check

    - name: Build with Nix
      run: |
        nix build .#
        ./result/bin/axectl --version

    - name: Test development shell
      run: |
        nix develop . --command cargo --version
        nix develop . --command rustc --version

    - name: Run tests in Nix environment
      run: |
        nix develop . --command cargo test

    - name: Build musl target with Nix
      run: |
        nix develop . --command cargo build --target x86_64-unknown-linux-musl
        file target/x86_64-unknown-linux-musl/debug/axectl

  nix-cross-platform:
    name: Nix Cross-Platform
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v23
      with:
        extra_nix_config: |
          experimental-features = nix-command flakes

    - name: Build with Nix
      run: |
        nix build .#
        ./result/bin/axectl --help

    - name: Test development environment
      run: |
        nix develop . --command cargo check